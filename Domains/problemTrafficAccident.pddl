(define (problem RTAM_5_1_35) (:domain RTAM)
(:objects
accident0 accident1 accident2 accident3 accident4 - accident
accident_location0 accident_location1 accident_location2 accident_location3 accident_location4 - accident_location
acc_victim0 acc_victim1 acc_victim2 acc_victim3 - acc_victim
ambulance0 - ambulance
fire_brigade0 - fire_brigade
police_car0 - police_car
tow_truck0 tow_truck1 tow_truck2 - tow_truck
car0 car1 car2 car3 car4 car5 car6 car7 car8 car9 car10 car11 car12 car13 car14 car15 car16 car17 car18 car19 car20 car21 car22 car23 car24 car25 car26 car27 car28 car29 car30 car31 car32 - car
fire_Hud fire_Hal - fire_station
police_Queen police_Bradley police_Halifax police_Huddersfield - police_station
huddersfield_hospital halifax_hospital brighouse_hospital - hospital
garage_halifax garage_huddersfield garage_brighouse garage_queensbury - garage
ainley_top huddersfield halifax bradley greetland brighouse baliff_bridge queensbury - city
hud_bradley bradley_ainley hud_brigh a629 ainley_greet ainley_brigh greet_halifax brigh_baliff brigh_queen baliff_halifax queen_halifax ainley_halifax - route
)
(:init
(= (speed ambulance0) 1)
(= (speed police_car0) 1.2)
(= (speed fire_brigade0) 0.8)
(= (speed tow_truck0) 0.8)
(= (speed tow_truck1) 0.8)
(= (speed tow_truck2) 0.8)
(in_city accident_location0 queensbury)
(in_city accident_location1 ainley_top)
(in_city huddersfield_hospital huddersfield)
(in_city garage_huddersfield huddersfield)
(in_city police_Huddersfield huddersfield)
(in_city fire_Hud huddersfield)
(in_city halifax_hospital halifax)
(in_city garage_halifax halifax)
(in_city police_Halifax halifax)
(in_city fire_Hal halifax)
(in_city police_Queen queensbury)
(in_city garage_queensbury queensbury)
(in_city police_Bradley bradley)
(in_city garage_brighouse brighouse)
(in_city brighouse_hospital brighouse)
(route_available ainley_halifax)
(connects ainley_halifax halifax ainley_top)
(connects ainley_halifax ainley_top halifax)
(route_available hud_bradley)
(connects hud_bradley huddersfield bradley)
(connects hud_bradley bradley huddersfield)
(route_available bradley_ainley)
(connects bradley_ainley bradley ainley_top)
(connects bradley_ainley ainley_top bradley)
(route_available hud_brigh)
(connects hud_brigh huddersfield brighouse)
(connects hud_brigh brighouse huddersfield)
(route_available a629)
(connects a629 huddersfield ainley_top)
(connects a629 ainley_top huddersfield)
(route_available ainley_greet)
(connects ainley_greet ainley_top greetland)
(connects ainley_greet greetland ainley_top)
(route_available ainley_brigh)
(connects ainley_brigh ainley_top brighouse)
(connects ainley_brigh brighouse ainley_top)
(route_available greet_halifax)
(connects greet_halifax greetland halifax)
(connects greet_halifax halifax greetland)
(route_available brigh_baliff)
(connects brigh_baliff brighouse baliff_bridge)
(connects brigh_baliff baliff_bridge brighouse)
(route_available brigh_queen)
(connects brigh_queen brighouse queensbury)
(connects brigh_queen queensbury brighouse)
(route_available baliff_halifax)
(connects baliff_halifax baliff_bridge halifax)
(connects baliff_halifax halifax baliff_bridge)
(route_available queen_halifax)
(connects queen_halifax queensbury halifax)
(connects queen_halifax halifax queensbury)
(= (route-length hud_bradley) 10)
(= (route-length bradley_ainley) 10)
(= (route-length hud_brigh) 6)
(= (route-length a629) 5)
(= (route-length ainley_greet) 10)
(= (route-length ainley_brigh) 10)
(= (route-length greet_halifax) 2)
(= (route-length brigh_baliff) 8)
(= (route-length brigh_queen) 8)
(= (route-length baliff_halifax) 10)
(= (route-length queen_halifax) 2)
(= (route-length ainley_halifax) 4)
(= (distance) 0)
(at acc_victim0 accident_location1)
(uncertified acc_victim0)
(untrapped acc_victim0)
(at acc_victim1 accident_location1)
(uncertified acc_victim1)
(untrapped acc_victim1)
(at acc_victim2 accident_location0)
(uncertified acc_victim2)
(untrapped acc_victim2)
(at car0 accident_location0)
(uncertified car0)
(off_fire car0)
(at car1 accident_location1)
(uncertified car1)
(off_fire car1)
(at car2 accident_location1)
(uncertified car2)
(off_fire car2)
(available ambulance0)
(available fire_brigade0)
(available police_car0)
(available tow_truck0)
(available tow_truck1)
(available tow_truck2)
(at ambulance0 huddersfield_hospital)
(at fire_brigade0 fire_Hud)
(at police_car0 police_Queen)
(at tow_truck0 garage_halifax)
(at tow_truck1 garage_huddersfield)
(at tow_truck2 garage_brighouse)
)
(:goal (and
(delivered acc_victim0)
(delivered acc_victim1)
(delivered acc_victim2)
(delivered car0)
(delivered car1)
(delivered car2)
)
)
(:metric minimize (+ (total-time) (distance)))
)
